/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import estructuras.ListaDoble;
import estructuras.ListaDobleImagenes;
import estructuras.MatrizDispersa;
import implementacion.ArchivosEntrada;
import implementacion.GeneradorGraphviz;
import implementacion.EstructuraGeneral;
import static implementacion.EstructuraGeneral.interfaz;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import nodos.NodoArbolAVL;
import nodos.NodoListaDobleCircular;

/**
 *
 * @author erikssonherlo
 */
public class GenerarImagenes extends javax.swing.JFrame {

    /**
     * Creates new form Interfaz
     */
    
    private EstructuraGeneral estructuraGeneral;
    private ArchivosEntrada archivosEntrada;
    private GeneradorGraphviz graficador;
    public GenerarImagenes() {
        initComponents();
        this.estructuraGeneral = new EstructuraGeneral();
        this.archivosEntrada = new ArchivosEntrada();
        this.graficador = new GeneradorGraphviz();
        
        lblApoyo2.setVisible(false);
        identificadorImagenInput.setVisible(false);
       
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Titulo = new javax.swing.JLabel();
        graficar = new javax.swing.JButton();
        menuAnterior = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        comboTipoGeneracion = new javax.swing.JComboBox<>();
        lblDescripcionGraficacion = new javax.swing.JLabel();
        cantidadCapasInput = new javax.swing.JTextField();
        lblTipoRecorrido = new javax.swing.JLabel();
        comboTipoRecorrido = new javax.swing.JComboBox<>();
        lblApoyo2 = new javax.swing.JLabel();
        identificadorImagenInput = new javax.swing.JTextField();
        panelGraficacion = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(getPreferredSize());
        setPreferredSize(new java.awt.Dimension(1400, 900));
        setSize(new java.awt.Dimension(1400, 900));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Titulo.setFont(new java.awt.Font("DejaVu Serif Condensed", 1, 40)); // NOI18N
        Titulo.setForeground(new java.awt.Color(1, 1, 1));
        Titulo.setText("GENERADOR DE IMAGENES");
        getContentPane().add(Titulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 20, 590, 53));

        graficar.setBackground(new java.awt.Color(43, 46, 46));
        graficar.setFont(new java.awt.Font("DejaVu Serif Condensed", 1, 15)); // NOI18N
        graficar.setForeground(new java.awt.Color(250, 250, 244));
        graficar.setText("Graficar");
        graficar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                graficarActionPerformed(evt);
            }
        });
        getContentPane().add(graficar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 100, 230, 40));

        menuAnterior.setBackground(new java.awt.Color(43, 46, 46));
        menuAnterior.setFont(new java.awt.Font("DejaVu Serif Condensed", 1, 15)); // NOI18N
        menuAnterior.setForeground(new java.awt.Color(250, 250, 244));
        menuAnterior.setText("Regresar al Menu Inicial");
        menuAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuAnteriorActionPerformed(evt);
            }
        });
        getContentPane().add(menuAnterior, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 20, 230, 40));

        jLabel2.setText("Tipo de Generaci√≥n:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, -1, -1));

        comboTipoGeneracion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Recorrido Limitado", "Lista de Imagenes", "Capa", "Usuario" }));
        comboTipoGeneracion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboTipoGeneracionActionPerformed(evt);
            }
        });
        getContentPane().add(comboTipoGeneracion, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 110, -1, -1));

        lblDescripcionGraficacion.setText("Numero de Capas:");
        getContentPane().add(lblDescripcionGraficacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 80, -1, -1));
        getContentPane().add(cantidadCapasInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 110, 140, -1));

        lblTipoRecorrido.setText("Tipo de Recorrido:");
        getContentPane().add(lblTipoRecorrido, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 80, -1, -1));

        comboTipoRecorrido.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Inorden", "Preorden", "Postorden" }));
        comboTipoRecorrido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboTipoRecorridoActionPerformed(evt);
            }
        });
        getContentPane().add(comboTipoRecorrido, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 110, -1, -1));

        lblApoyo2.setText("Id de Imagen:");
        getContentPane().add(lblApoyo2, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 80, -1, -1));
        getContentPane().add(identificadorImagenInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 110, 210, -1));

        panelGraficacion.setBackground(new java.awt.Color(254, 254, 254));
        panelGraficacion.setPreferredSize(new java.awt.Dimension(548, 548));

        javax.swing.GroupLayout panelGraficacionLayout = new javax.swing.GroupLayout(panelGraficacion);
        panelGraficacion.setLayout(panelGraficacionLayout);
        panelGraficacionLayout.setHorizontalGroup(
            panelGraficacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1340, Short.MAX_VALUE)
        );
        panelGraficacionLayout.setVerticalGroup(
            panelGraficacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 700, Short.MAX_VALUE)
        );

        getContentPane().add(panelGraficacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, 1340, 700));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void graficarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_graficarActionPerformed
     ListaDoble listaCapasGraficar = new ListaDoble();

        switch(comboTipoGeneracion.getSelectedIndex()) {
            case 0:
            //Por recorrido limitado
            try {
                String cantidadCapas = cantidadCapasInput.getText();
                int numeroDeCapas = Integer.parseInt(cantidadCapas);
                if(numeroDeCapas > estructuraGeneral.getArbolCapas().getCantidad()) {
                    JOptionPane.showMessageDialog(null, "El numero de capas solicitadas es mayor al numero de capas existentes");
                } else {
                    switch(comboTipoRecorrido.getSelectedIndex()) {
                        case 0:
                        estructuraGeneral.getArbolCapas().llenarListaDoble(listaCapasGraficar, "INORDEN", numeroDeCapas);
                        break;
                        case 1:
                        estructuraGeneral.getArbolCapas().llenarListaDoble(listaCapasGraficar, "PREORDEN", numeroDeCapas);
                        break;
                        case 2:
                        estructuraGeneral.getArbolCapas().llenarListaDoble(listaCapasGraficar, "POSTORDEN", numeroDeCapas);
                        break;
                    }
                    ListaDoble listaCapasEnviar = new ListaDoble();
                    for(int i  = 0; i < numeroDeCapas; i++) {
                        listaCapasEnviar.insertar(listaCapasGraficar.buscar(i));
                    }
                    graficador.graficarImagen(listaCapasEnviar, panelGraficacion);
                }

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Revise si la cantidad de capas es correcta");
            }
            break;
            case 1:
            //Por lista de imagenes
            NodoListaDobleCircular imagenAUsar;
            String idImagen = cantidadCapasInput.getText();
            if((imagenAUsar = estructuraGeneral.getListaImagenes().buscar(idImagen)) != null) {
                graficador.graficarImagen(imagenAUsar.getListaCapas(), panelGraficacion);
            } else {
                JOptionPane.showMessageDialog(null, "No se ha encontrado la imagen: " + idImagen);
            }
            break;
            case 2:
            //Por capa
            String capaSolicitada = cantidadCapasInput.getText();
            NodoArbolAVL capaGraficar;
            if((capaGraficar = estructuraGeneral.getArbolCapas().buscar(capaSolicitada)) != null) {
                listaCapasGraficar.insertar(capaGraficar);
                graficador.graficarImagen(listaCapasGraficar, panelGraficacion);
            } else {
                JOptionPane.showMessageDialog(null, "No se ha encontrado la capa: "  + capaSolicitada);
            }
            break;
            case 3:
            //Por Lista de Imagenes
            String usuarioConsultado = cantidadCapasInput.getText();
            String imagenConsultada = identificadorImagenInput.getText();
            NodoArbolAVL usuario;
            if((usuario = estructuraGeneral.getArbolUsuarios().buscar(usuarioConsultado)) != null) {
                ListaDobleImagenes listaImagenesUsuarios = (ListaDobleImagenes) usuario.getContenido();
                NodoListaDobleCircular imagen;
                if((imagen = listaImagenesUsuarios.buscar(imagenConsultada)) != null) {
                    graficador.graficarImagen(imagen.getListaCapas(), panelGraficacion);
                } else {
                    JOptionPane.showMessageDialog(null, "El usuario " + usuarioConsultado + " no posee la imagen: " + imagenConsultada);
                }
            } else {
                JOptionPane.showMessageDialog(null, "No se ha encontrado el usuario: " + usuarioConsultado);
            }
            break;
            default:
            break;
        }
    }//GEN-LAST:event_graficarActionPerformed

    private void menuAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuAnteriorActionPerformed
        interfaz.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_menuAnteriorActionPerformed

    private void comboTipoGeneracionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboTipoGeneracionActionPerformed
        // TODO add your handling code here:
        cantidadCapasInput.setText("");
        identificadorImagenInput.setText("");
        switch(comboTipoGeneracion.getSelectedIndex()) {
            case 0:
            lblDescripcionGraficacion.setText("Numero de Capas a Utilizar: ");
            lblApoyo2.setVisible(false);
            identificadorImagenInput.setVisible(false);
            lblTipoRecorrido.setVisible(true);
            comboTipoRecorrido.setVisible(true);
            break;
            case 1:
            lblDescripcionGraficacion.setText("Id de la Imagen: ");
            lblApoyo2.setVisible(false);
            identificadorImagenInput.setVisible(false);
            lblTipoRecorrido.setVisible(false);
            comboTipoRecorrido.setVisible(false);
            break;
            case 2:
            lblDescripcionGraficacion.setText("Id de la Capa: ");
            lblApoyo2.setVisible(false);
            identificadorImagenInput.setVisible(false);
            lblTipoRecorrido.setVisible(false);
            comboTipoRecorrido.setVisible(false);
            break;
            case 3:
            lblDescripcionGraficacion.setText("Id del Usuario: ");
            lblApoyo2.setVisible(true);
            identificadorImagenInput.setVisible(true);
            lblTipoRecorrido.setVisible(false);
            comboTipoRecorrido.setVisible(false);
            break;
            default:
            break;
        }
    }//GEN-LAST:event_comboTipoGeneracionActionPerformed

    private void comboTipoRecorridoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboTipoRecorridoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboTipoRecorridoActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Titulo;
    private javax.swing.JTextField cantidadCapasInput;
    private javax.swing.JComboBox<String> comboTipoGeneracion;
    private javax.swing.JComboBox<String> comboTipoRecorrido;
    private javax.swing.JButton graficar;
    private javax.swing.JTextField identificadorImagenInput;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lblApoyo2;
    private javax.swing.JLabel lblDescripcionGraficacion;
    private javax.swing.JLabel lblTipoRecorrido;
    private javax.swing.JButton menuAnterior;
    private javax.swing.JPanel panelGraficacion;
    // End of variables declaration//GEN-END:variables
}
